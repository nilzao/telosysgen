/*
 * Created on 2020-02-12 ( Date ISO 2020-02-12 - Time 22:12:27 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.1.2
 */

package org.telosysgen;

import java.io.Serializable;


import javax.persistence.*;

/**
 * Persistent class for "TbTable" entity stored in table "TB_TABLE" <br>
 * This class is a "record entity" without JPA links  <br>
 *
 * @author Telosys
 *
 */
@Entity
@Table(name="TB_TABLE", schema="PUBLIC" )
// Define named queries here
@NamedQueries ( {
  @NamedQuery ( name="TbTableJpaRecord.countAll",  query="SELECT COUNT(x) FROM TbTableJpaRecord x" ),
  @NamedQuery ( name="TbTableJpaRecord.countById", query="SELECT COUNT(x) FROM TbTableJpaRecord x WHERE x.idTable = ?1 " )
} )
public class TbTableJpaRecord implements Serializable {

    private static final long serialVersionUID = 1L;

    //----------------------------------------------------------------------
    // ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
    //----------------------------------------------------------------------
    @Id
    @GeneratedValue(strategy=GenerationType.AUTO)
    @Column(name="ID_TABLE", nullable=false)
    private Long       idTable      ; 

    //----------------------------------------------------------------------
    // ENTITY DATA FIELDS 
    //----------------------------------------------------------------------    
    @Column(name="CATALOG", length=100)
    private String     catalog      ; 

    @Column(name="COMMENT", length=100)
    private String     comment      ; 

    @Column(name="TYPE", length=100)
    private String     type         ; 

    @Column(name="JAVA_BEAN", length=100)
    private String     javaBean     ; 

    @Column(name="NAME", length=100)
    private String     name         ; 

    @Column(name="SCHEMA", length=100)
    private String     schema       ; 

    @Column(name="ID_DATABASE")
    private Long       idDatabase   ; // Foreign Key 


    //----------------------------------------------------------------------
    // CONSTRUCTOR(S)
    //----------------------------------------------------------------------
    public TbTableJpaRecord() {
		super();
    }
    
    //----------------------------------------------------------------------
    // GETTER & SETTER FOR THE KEY FIELD
    //----------------------------------------------------------------------
    public void setIdTable( Long idTable ) {
        this.idTable = idTable ;
    }
    public Long getIdTable() {
        return this.idTable;
    }

    //----------------------------------------------------------------------
    // GETTERS & SETTERS FOR FIELDS
    //----------------------------------------------------------------------
    //--- DATABASE MAPPING : CATALOG ( VARCHAR ) 
    public void setCatalog( String catalog ) {
        this.catalog = catalog;
    }
    public String getCatalog() {
        return this.catalog;
    }

    //--- DATABASE MAPPING : COMMENT ( VARCHAR ) 
    public void setDatabaseComment( String comment ) {
        this.comment = comment;
    }
    public String getDatabaseComment() {
        return this.comment;
    }

    //--- DATABASE MAPPING : TYPE ( VARCHAR ) 
    public void setDatabaseType( String type ) {
        this.type = type;
    }
    public String getDatabaseType() {
        return this.type;
    }

    //--- DATABASE MAPPING : JAVA_BEAN ( VARCHAR ) 
    public void setJavaBean( String javaBean ) {
        this.javaBean = javaBean;
    }
    public String getJavaBean() {
        return this.javaBean;
    }

    //--- DATABASE MAPPING : NAME ( VARCHAR ) 
    public void setName( String name ) {
        this.name = name;
    }
    public String getName() {
        return this.name;
    }

    //--- DATABASE MAPPING : SCHEMA ( VARCHAR ) 
    public void setSchema( String schema ) {
        this.schema = schema;
    }
    public String getSchema() {
        return this.schema;
    }

    //--- DATABASE MAPPING : ID_DATABASE ( BIGINT ) 
    public void setIdDatabase( Long idDatabase ) {
        this.idDatabase = idDatabase;
    }
    public Long getIdDatabase() {
        return this.idDatabase;
    }


    //----------------------------------------------------------------------
    // toString METHOD
    //----------------------------------------------------------------------
    public String toString() { 
        StringBuffer sb = new StringBuffer(); 
        sb.append("["); 
        sb.append(idTable);
        sb.append("]:"); 
        sb.append(catalog);
        sb.append("|");
        sb.append(comment);
        sb.append("|");
        sb.append(type);
        sb.append("|");
        sb.append(javaBean);
        sb.append("|");
        sb.append(name);
        sb.append("|");
        sb.append(schema);
        sb.append("|");
        sb.append(idDatabase);
        return sb.toString(); 
    } 

}
