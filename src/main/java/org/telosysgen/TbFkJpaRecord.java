/*
 * Created on 2020-02-12 ( Date ISO 2020-02-12 - Time 22:12:27 )
 * Generated by Telosys ( http://www.telosys.org/ ) version 3.1.2
 */

package org.telosysgen;

import java.io.Serializable;
import java.util.List;

import javax.persistence.*;

/**
 * Persistent class for "TbFk" entity stored in table "TB_FK" <br>
 * This class is a "record entity" without JPA links <br>
 *
 * @author Telosys
 *
 */
@Entity
@Table(name = "TB_FK")
// Define named queries here
@NamedQueries({ @NamedQuery(name = "TbFkJpaRecord.countAll", query = "SELECT COUNT(x) FROM TbFkJpaRecord x"),
		@NamedQuery(name = "TbFkJpaRecord.countById", query = "SELECT COUNT(x) FROM TbFkJpaRecord x WHERE x.idFk = ?1 ") })
public class TbFkJpaRecord implements Serializable {

	private static final long serialVersionUID = 1L;

	// ----------------------------------------------------------------------
	// ENTITY PRIMARY KEY ( BASED ON A SINGLE FIELD )
	// ----------------------------------------------------------------------
	@Id
	@GeneratedValue(strategy = GenerationType.AUTO, generator = "SEQ_FK")
	@Column(name = "ID_FK", nullable = false)
	private Long idFk;

	// ----------------------------------------------------------------------
	// ENTITY DATA FIELDS
	// ----------------------------------------------------------------------
	@Column(name = "FKCOL", length = 100)
	private String fkcol;

	@Column(name = "NAME", length = 100)
	private String name;

	@ManyToOne(cascade = { CascadeType.MERGE, CascadeType.PERSIST })
	@JoinColumn(name = "ID_TABLE", referencedColumnName = "ID_TABLE", foreignKey = @ForeignKey(name = "FK_FK_TABLE"))
	private TbTableJpaRecord table;

	@OneToMany(mappedBy = "fk", fetch = FetchType.LAZY, targetEntity = TbFkColJpaRecord.class, cascade = {
			CascadeType.MERGE, CascadeType.PERSIST })
	private List<TbFkColJpaRecord> fkColList;

	// ----------------------------------------------------------------------
	// CONSTRUCTOR(S)
	// ----------------------------------------------------------------------
	public TbFkJpaRecord() {
		super();
	}

	// ----------------------------------------------------------------------
	// GETTER & SETTER FOR THE KEY FIELD
	// ----------------------------------------------------------------------
	public void setIdFk(Long idFk) {
		this.idFk = idFk;
	}

	public Long getIdFk() {
		return this.idFk;
	}

	// ----------------------------------------------------------------------
	// GETTERS & SETTERS FOR FIELDS
	// ----------------------------------------------------------------------
	// --- DATABASE MAPPING : FKCOL ( VARCHAR )
	public void setFkcol(String fkcol) {
		this.fkcol = fkcol;
	}

	public String getFkcol() {
		return this.fkcol;
	}

	// --- DATABASE MAPPING : NAME ( VARCHAR )
	public void setName(String name) {
		this.name = name;
	}

	public String getName() {
		return this.name;
	}

	public TbTableJpaRecord getTable() {
		return table;
	}

	public void setTable(TbTableJpaRecord table) {
		this.table = table;
	}

	public void setId(Long id) {
		this.idFk = id;
	}

	public Long getId() {
		return this.idFk;
	}

	public List<TbFkColJpaRecord> getFkColList() {
		return fkColList;
	}

	public void setFkColList(List<TbFkColJpaRecord> fkColList) {
		this.fkColList = fkColList;
	}

	// ----------------------------------------------------------------------
	// toString METHOD
	// ----------------------------------------------------------------------
	public String toString() {
		StringBuffer sb = new StringBuffer();
		sb.append("[");
		sb.append(idFk);
		sb.append("]:");
		sb.append(fkcol);
		sb.append("|");
		sb.append(name);
		return sb.toString();
	}

}
